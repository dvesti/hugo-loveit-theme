[{"categories":["txt"],"content":"desc txt url","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-url/","tags":["txt","hugo"],"title":"txt url","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-url/"},{"categories":["txt"],"content":"TODO ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-url/:0:0","tags":["txt","hugo"],"title":"txt url","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-url/"},{"categories":["txt"],"content":"desc txt base","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"Markdown 基本语法 这篇文章提供了可以在 Hugo 的文章中使用的基本 Markdown 语法示例. 注意 这篇文章借鉴了一篇很棒的来自 Grav 的文章. 如果你想了解 Loveit 主题的扩展 Markdown 语法, 请阅读扩展 Markdown 语法页面. 事实上, 编写 Web 内容很麻烦. WYSIWYG所见即所得 编辑器帮助减轻了这一任务. 但通常会导致代码太糟, 或更糟糕的是, 网页也会很丑. 没有通常伴随的所有复杂和丑陋的问题, Markdown 是一种更好的生成 HTML 内容的方式. 一些主要好处是: Markdown 简单易学, 几乎没有多余的字符, 因此编写内容也更快. 用 Markdown 书写时出错的机会更少. 可以产生有效的 XHTML 输出. 将内容和视觉显示保持分开, 这样就不会打乱网站的外观. 可以在你喜欢的任何文本编辑器或 Markdown 应用程序中编写内容. Markdown 使用起来很有趣! John Gruber, Markdown 的作者如是说: Markdown 格式的首要设计目标是更具可读性. 最初的想法是 Markdown 格式的文档应当以纯文本形式发布, 而不会看起来像被标签或格式说明所标记. 虽然 Markdown 的语法受到几种现有的文本到 HTML 转换工具的影响, 但 Markdown 语法的最大灵感来源是纯文本电子邮件的格式. – John Gruber 话不多说, 我们来回顾一下 Markdown 的主要语法以及生成的 HTML 样式! 技巧  将此页保存为书签，以备将来参考! ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:0:0","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"1 标题 从 h2 到 h6 的标题在每个级别上都加上一个 ＃: ## h2 标题 ### h3 标题 #### h4 标题 ##### h5 标题 ###### h6 标题 输出的 HTML 看起来像这样: \u003ch2\u003eh2 标题\u003c/h2\u003e \u003ch3\u003eh3 标题\u003c/h3\u003e \u003ch4\u003eh4 标题\u003c/h4\u003e \u003ch5\u003eh5 标题\u003c/h5\u003e \u003ch6\u003eh6 标题\u003c/h6\u003e 标题 ID 要添加自定义标题 ID, 请在与标题相同的行中将自定义 ID 放在花括号中: ### 一个很棒的标题 {#custom-id} 输出的 HTML 看起来像这样: \u003ch3 id=\"custom-id\"\u003e一个很棒的标题\u003c/h3\u003e ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:1:0","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"2 注释 注释是和 HTML 兼容的： \u003c!-- 这是一段注释 --\u003e 不能看到以下的注释: ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:2:0","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"3 水平线 HTML 中的 \u003chr\u003e 标签是用来在段落元素之间创建一个 “专题间隔” 的. 使用 Markdown, 你可以用以下方式创建一个 \u003chr\u003e 标签: ___: 三个连续的下划线 ---: 三个连续的破折号 ***: 三个连续的星号 呈现的输出效果如下: ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:3:0","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"4 段落 按照纯文本的方式书写段落, 纯文本在呈现的 HTML 中将用 \u003cp\u003e/\u003c/p\u003e 标签包裹. 如下段落: Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. 输出的 HTML 看起来像这样: \u003cp\u003eLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u003c/p\u003e 可以使用一个空白行进行换行. ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:4:0","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"5 内联 HTML 元素 如果你需要某个 HTML 标签 (带有一个类), 则可以简单地像这样使用: Markdown 格式的段落. \u003cdiv class=\"class\"\u003e 这是 \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e Markdown 格式的段落. ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:5:0","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"6 强调 ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:6:0","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"加粗 用于强调带有较粗字体的文本片段. 以下文本片段会被 渲染为粗体. **渲染为粗体** __渲染为粗体__ 输出的 HTML 看起来像这样: \u003cstrong\u003e渲染为粗体\u003c/strong\u003e ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:6:1","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"斜体 用于强调带有斜体的文本片段. 以下文本片段被 渲染为斜体. *渲染为斜体* _渲染为斜体_ 输出的 HTML 看起来像这样: \u003cem\u003e渲染为斜体\u003c/em\u003e ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:6:2","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"删除线 按照 GFMGitHub flavored Markdown 你可以使用删除线. ~~这段文本带有删除线.~~ 呈现的输出效果如下: 这段文本带有删除线. 输出的 HTML 看起来像这样: \u003cdel\u003e这段文本带有删除线.\u003c/del\u003e ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:6:3","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"组合 加粗, 斜体, 和删除线可以 组合使用. ***加粗和斜体*** ~~**删除线和加粗**~~ ~~*删除线和斜体*~~ ~~***加粗, 斜体和删除线***~~ 呈现的输出效果如下: 加粗和斜体 删除线和加粗 删除线和斜体 加粗, 斜体和删除线 输出的 HTML 看起来像这样: \u003cem\u003e\u003cstrong\u003e加粗和斜体\u003c/strong\u003e\u003c/em\u003e \u003cdel\u003e\u003cstrong\u003e删除线和加粗\u003c/strong\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e删除线和斜体\u003c/em\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e\u003cstrong\u003e加粗, 斜体和删除线\u003c/strong\u003e\u003c/em\u003e\u003c/del\u003e ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:6:4","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"7 引用 用于在文档中引用其他来源的内容块. 在要引用的任何文本之前添加 \u003e: \u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 呈现的输出效果如下: Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 输出的 HTML 看起来像这样: \u003cblockquote\u003e \u003cp\u003e \u003cstrong\u003eFusion Drive\u003c/strong\u003e combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. \u003c/p\u003e \u003c/blockquote\u003e 引用也可以嵌套: \u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u003e\u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. 呈现的输出效果如下: Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:7:0","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"8 列表 ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:8:0","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"无序列表 一系列项的列表, 其中项的顺序没有明显关系. 你可以使用以下任何符号来表示无序列表中的项: * 一项内容 - 一项内容 + 一项内容 例如: * Lorem ipsum dolor sit amet * Consectetur adipiscing elit * Integer molestie lorem at massa * Facilisis in pretium nisl aliquet * Nulla volutpat aliquam velit * Phasellus iaculis neque * Purus sodales ultricies * Vestibulum laoreet porttitor sem * Ac tristique libero volutpat at * Faucibus porta lacus fringilla vel * Aenean sit amet erat nunc * Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003cul\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit \u003cul\u003e \u003cli\u003ePhasellus iaculis neque\u003c/li\u003e \u003cli\u003ePurus sodales ultricies\u003c/li\u003e \u003cli\u003eVestibulum laoreet porttitor sem\u003c/li\u003e \u003cli\u003eAc tristique libero volutpat at\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ul\u003e ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:8:1","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"有序列表 一系列项的列表, 其中项的顺序确实很重要. 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003col\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit\u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ol\u003e 技巧 如果你对每一项使用 1., Markdown 将自动为每一项编号. 例如: 1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:8:2","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"任务列表 任务列表使你可以创建带有复选框的列表. 要创建任务列表, 请在任务列表项之前添加破折号 (-) 和带有空格的方括号 ([ ]). 要选择一个复选框，请在方括号之间添加 x ([x]). - [x] Write the press release - [ ] Update the website - [ ] Contact the media 呈现的输出效果如下: Write the press release Update the website Contact the media ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:8:3","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"9 代码 ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:9:0","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"行内代码 用 ` 包装行内代码段. 在这个例子中, `\u003csection\u003e\u003c/section\u003e` 会被包裹成 **代码**. 呈现的输出效果如下: 在这个例子中, \u003csection\u003e\u003c/section\u003e 会被包裹成 代码. 输出的 HTML 看起来像这样: \u003cp\u003e 在这个例子中, \u003ccode\u003e\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;\u003c/code\u003e 会被包裹成 \u003cstrong\u003e代码\u003c/strong\u003e. \u003c/p\u003e ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:9:1","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"缩进代码 将几行代码缩进至少四个空格，例如: // Some comments line 1 of code line 2 of code line 3 of code 呈现的输出效果如下: // Some comments line 1 of code line 2 of code line 3 of code 输出的 HTML 看起来像这样: \u003cpre\u003e \u003ccode\u003e // Some comments line 1 of code line 2 of code line 3 of code \u003c/code\u003e \u003c/pre\u003e ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:9:2","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"围栏代码块 使用 “围栏” ``` 来生成一段带有语言属性的代码块. ```markdown Sample text here... ``` 输出的 HTML 看起来像这样: \u003cpre language-html\u003e \u003ccode\u003eSample text here...\u003c/code\u003e \u003c/pre\u003e ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:9:3","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"语法高亮 GFMGitHub Flavored Markdown 也支持语法高亮. 要激活它，只需在第一个代码 “围栏” 之后直接添加你要使用的语言的文件扩展名, ```js, 语法高亮显示将自动应用于渲染的 HTML 中. 例如, 在以下 JavaScript 代码中应用语法高亮: ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` 呈现的输出效果如下: grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; 注意 Hugo 文档中的 语法高亮页面 介绍了有关语法高亮的更多信息, 包括语法高亮的 shortcode. ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:9:4","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"10 表格 通过在每个单元格之间添加竖线作为分隔线, 并在标题下添加一行破折号 (也由竖线分隔) 来创建表格. 注意, 竖线不需要垂直对齐. | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. 输出的 HTML 看起来像这样: \u003ctable\u003e \u003cthead\u003e \u003ctr\u003e \u003cth\u003eOption\u003c/th\u003e \u003cth\u003eDescription\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003edata\u003c/td\u003e \u003ctd\u003epath to data files to supply the data that will be passed into templates.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eengine\u003c/td\u003e \u003ctd\u003eengine to be used for processing templates. Handlebars is the default.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eext\u003c/td\u003e \u003ctd\u003eextension to be used for dest files.\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e 文本右对齐或居中对齐 在任何标题下方的破折号右侧添加冒号将使该列的文本右对齐. 在任何标题下方的破折号两边添加冒号将使该列的对齐文本居中. | Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:10:0","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"11 链接 ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:11:0","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"基本链接 \u003chttps://assemble.io\u003e \u003ccontact@revolunet.com\u003e [Assemble](https://assemble.io) 呈现的输出效果如下 (将鼠标悬停在链接上，没有提示): https://assemble.io contact@revolunet.com Assemble 输出的 HTML 看起来像这样: \u003ca href=\"https://assemble.io\"\u003ehttps://assemble.io\u003c/a\u003e \u003ca href=\"mailto:contact@revolunet.com\"\u003econtact@revolunet.com\u003c/a\u003e \u003ca href=\"https://assemble.io\"\u003eAssemble\u003c/a\u003e ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:11:1","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"添加一个标题 [Upstage](https://github.com/upstage/ \"Visit Upstage!\") 呈现的输出效果如下 (将鼠标悬停在链接上，会有一行提示): Upstage 输出的 HTML 看起来像这样: \u003ca href=\"https://github.com/upstage/\" title=\"Visit Upstage!\"\u003eUpstage\u003c/a\u003e ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:11:2","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"定位标记 定位标记使你可以跳至同一页面上的指定锚点. 例如, 每个章节: ## Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) 将跳转到这些部分: ## Chapter 1 \u003ca id=\"chapter-1\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 2 \u003ca id=\"chapter-2\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 3 \u003ca id=\"chapter-3\"\u003e\u003c/a\u003e Content for chapter one. 注意 定位标记的位置几乎是任意的. 因为它们并不引人注目, 所以它们通常被放在同一行了. ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:11:3","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"12 脚注 脚注使你可以添加注释和参考, 而不会使文档正文混乱. 当你创建脚注时, 会在添加脚注引用的位置出现带有链接的上标编号. 读者可以单击链接以跳至页面底部的脚注内容. 要创建脚注引用, 请在方括号中添加插入符号和标识符 ([^1]). 标识符可以是数字或单词, 但不能包含空格或制表符. 标识符仅将脚注引用与脚注本身相关联 - 在脚注输出中, 脚注按顺序编号. 在中括号内使用插入符号和数字以及用冒号和文本来添加脚注内容 ([^1]：这是一段脚注). 你不一定要在文档末尾添加脚注. 可以将它们放在除列表, 引用和表格等元素之外的任何位置. 这是一个数字脚注[^1]. 这是一个带标签的脚注[^label] [^1]: 这是一个数字脚注 [^label]: 这是一个带标签的脚注 这是一个数字脚注1. 这是一个带标签的脚注2 ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:12:0","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["txt"],"content":"13 图片 图片的语法与链接相似, 但包含一个在前面的感叹号. ![Minion](https://octodex.github.com/images/minion.png) 或者: ![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") The StormtroopocatAlt text \" The Stormtroopocat 像链接一样, 图片也具有脚注样式的语法: ![Alt text][id] The DojocatAlt text \" The Dojocat 稍后在文档中提供参考内容, 用来定义 URL 的位置: [id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\" 技巧 LoveIt 主题提供了一个包含更多功能的 图片的 shortcode. 这是一个数字脚注 ↩︎ 这是一个带标签的脚注 ↩︎ ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/txt-base/:13:0","tags":["txt","hugo"],"title":"txt base","uri":"/hugo-loveit-theme/posts/2020/11/18/txt-base/"},{"categories":["test"],"content":"desc test code","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/test-code/","tags":["test","hugo"],"title":"test code","uri":"/hugo-loveit-theme/posts/2020/11/18/test-code/"},{"categories":["test"],"content":"精度问题 x := 74.96 y := 20.48 b := x - y fmt.Println(b) //output: 54.47999999999999 var a = 0.6 fmt.Println(a + 0.7) //output: 1.2999999999999998 出现浮点数不精确的原因是，浮点数储存至内存中时，2的-1、-2……-n次方不能精确的表示小数部分，所以再把这个数从地址中取出来进行计算就出现了偏差 不是所有的float相加减乘除都一定出现偏差，具体要根据golang实现IEEE 754的情况定 表现为 float32和float64直接互转会精度丢失, 四舍五入后错误 int64转float64在数值很大的时候出现偏差 两位小数乘100强转int, 比期望值少了1 // case: float32==\u003efloat64 // 从数据库中取出80.45, 历史代码用float32接收 var a float32 = 80.45 var b float64 // 有些函数只能接收float64, 只能强转 b = float64(a) // 打印出值, 强转后出现偏差 fmt.Println(a) //output:80.45 fmt.Println(b) //output:80.44999694824219 // ... 四舍五入保留小数点后1位, 期望80.5, 结果是80.4 // case: int64==\u003efloat64 var c int64 = 987654321098765432 fmt.Printf(\"%.f\\n\", float64(c)) //output:987654321098765440 // case: int(float64(xx.xx*100)) var d float64 = 1129.6 var e int64 = int64(d * 100) fmt.Println(e) //output:112959 ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/test-code/:1:0","tags":["test","hugo"],"title":"test code","uri":"/hugo-loveit-theme/posts/2020/11/18/test-code/"},{"categories":["test"],"content":"解决精度问题 思路都是 利用取近似值的方法 fmt.Sprintf() func Round2(f float64, n int) float64 { floatStr := fmt.Sprintf(\"%.\"+strconv.Itoa(n)+\"f\", f) inst, _ := strconv.ParseFloat(floatStr, 64) return inst } math.Trunc() func Round(f float64, n int) float64 { n10 := math.Pow10(n) return math.Trunc((f+0.5/n10)*n10) / n10 } ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/test-code/:1:1","tags":["test","hugo"],"title":"test code","uri":"/hugo-loveit-theme/posts/2020/11/18/test-code/"},{"categories":["test"],"content":"舍入规则 ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/test-code/:2:0","tags":["test","hugo"],"title":"test code","uri":"/hugo-loveit-theme/posts/2020/11/18/test-code/"},{"categories":["test"],"content":"舍入规则说明 ROUND_HALF_EVEN 也就是 四舍六入五成双 这是一种比较精确比较科学的计数保留法，是一种数字修约规则，又名银行家舍入法。它比通常用的四舍五入法更加精确 简单规则描述 被修约的数字小于5时，该数字舍去； 被修约的数字大于5时，则进位； 被修约的数字等于5时，要看5前面的数字，若是奇数则进位，若是偶数则将5舍掉，即修约后末尾数字都成为偶数；若5的后面还有不为“0”的任何数，则此时无论5的前面是奇数还是偶数，均应进位。 四舍六入五考虑，五后非零就进一，五后为零看奇偶，五前为偶应舍去，五前为奇要进一 注意：Golang中浮点数精确到超过14位小数后，该舍入规则将不准确，原因是golang的浮点型最大精确到小数点后15位 相信规则见 wiki/IEEE_754 验证 Golang中浮点型默认使用银行家舍入法，如下使用代码验证 import ( \"fmt\" ) func main() { fmt.Printf(\"9.8249 =\u003e %0.2f(四舍)\\n\", 9.8249) fmt.Printf(\"9.82671 =\u003e %0.2f(六入)\\n\", 9.82671) fmt.Printf(\"9.8351 =\u003e %0.2f(五后非零就进一)\\n\", 9.8351) fmt.Printf(\"9.82501 =\u003e %0.2f(五后非零就进一)\\n\", 9.82501) fmt.Printf(\"9.8250 =\u003e %0.2f(五后为零看奇偶，五前为偶应舍去)\\n\", 9.8250) fmt.Printf(\"9.8350 =\u003e %0.2f(五后为零看奇偶，五前为奇要进一)\\n\", 9.8350) } 输出 9.8249 =\u003e 9.82(四舍) 9.82671 =\u003e 9.83(六入) 9.8351 =\u003e 9.84(五后非零就进一) 9.82501 =\u003e 9.83(五后非零就进一) 9.8250 =\u003e 9.82(五后为零看奇偶，五前为偶应舍去) 9.8350 =\u003e 9.84(五后为零看奇偶，五前为奇要进一) ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/test-code/:2:1","tags":["test","hugo"],"title":"test code","uri":"/hugo-loveit-theme/posts/2020/11/18/test-code/"},{"categories":["test"],"content":"舍入技巧 可以方便得使用fmt的方法对浮点型进行银行家取舍，取得其近似数 import ( \"fmt\" \"strconv\" ) func main() { s := fmt.Sprintf(\"%0.6f\", 17.82671567890123456789987654324567898765432) f, _ := strconv.ParseFloat(s, 64) fmt.Println(s, f) } 输出 17.826716 17.826716 ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/test-code/:3:0","tags":["test","hugo"],"title":"test code","uri":"/hugo-loveit-theme/posts/2020/11/18/test-code/"},{"categories":["test"],"content":"golang 四舍五入 import ( \"math\" ) func roundHalfUp(val float64)float64{ return math.Floor(val +0.5) } func roundHalfUp(val float64, places int) float64 { var t float64 f := math.Pow10(places) x := val * f if math.IsInf(x, 0) || math.IsNaN(x) { return val } if x \u003e= 0.0 { t = math.Ceil(x) if (t - x) \u003e 0.50000000001 { t -= 1.0 } } else { t = math.Ceil(-x) if (t + x) \u003e 0.50000000001 { t -= 1.0 } t = -t } x = t / f if !math.IsInf(x, 0) { return x } return t } ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/test-code/:3:1","tags":["test","hugo"],"title":"test code","uri":"/hugo-loveit-theme/posts/2020/11/18/test-code/"},{"categories":[],"content":"English README | 简体中文说明 LoveIt is a clean, elegant but advanced blog theme for Hugo. It is based on the original LeaveIt Theme and KeepIt Theme. Since the three themes have a similar look, if you have questions about their differences, read Why choose LoveIt so that you can choose the one that works best for you. ","date":"2020-11-18","objectID":"/hugo-loveit-theme/about/:0:0","tags":["about","LoveIt"],"title":"About site","uri":"/hugo-loveit-theme/about/"},{"categories":[],"content":"Demo Site To see this theme in action, here is a live demo site which is rendered with LoveIt theme. ","date":"2020-11-18","objectID":"/hugo-loveit-theme/about/:1:0","tags":["about","LoveIt"],"title":"About site","uri":"/hugo-loveit-theme/about/"},{"categories":[],"content":"Why choose LoveIt Compared to the original LeaveIt theme and the KeepIt theme, the LoveIt theme has the following modifications. Custom Header Custom CSS Style A new home page, compatible with the latest version of Hugo A lot of style detail adjustments, including color, font size, margins, code preview style More readable dark mode Some beautiful CSS animations Easy-to-use and self-expanding table of contents More social links, share sites and comment system Search supported by Lunr.js or algolia Copy code to clipboard with one click Extended Markdown syntax for Font Awesome icons Extended Markdown syntax for ruby annotation Extended Markdown syntax for fraction Mathematical formula supported by KaTeX Diagram syntax shortcode supported by mermaid Interactive data visualization shortcode supported by ECharts Mapbox shortcode supported by Mapbox GL JS Embedded music player supported by APlayer and MetingJS Bilibili player supported Kinds of admonitions shortcode supported Custom style shortcodes supported CDN for all third-party libraries supported … In short, if you prefer the design language and freedom of the LoveIt theme, if you want to use the extended Font Awesome icons conveniently, if you want to embed mathematical formulas, flowcharts, music or Bilibili videos in your posts, the LoveIt theme may be more suitable for you. I hope you will LoveIt ❤️! ","date":"2020-11-18","objectID":"/hugo-loveit-theme/about/:2:0","tags":["about","LoveIt"],"title":"About site","uri":"/hugo-loveit-theme/about/"},{"categories":[],"content":"Multilingual and i18n LoveIt supports the following languages: English Simplified Chinese French Polish Brazilian Portuguese Italian Spanish German Serbian Russian Romanian Vietnamese Contribute with a new language Languages Compatibility ","date":"2020-11-18","objectID":"/hugo-loveit-theme/about/:3:0","tags":["about","LoveIt"],"title":"About site","uri":"/hugo-loveit-theme/about/"},{"categories":[],"content":"Roadmap ","date":"2020-11-18","objectID":"/hugo-loveit-theme/about/:4:0","tags":["about","LoveIt"],"title":"About site","uri":"/hugo-loveit-theme/about/"},{"categories":[],"content":"Questions, ideas, bugs, pull requests All feedback is welcome! Head over to the issue tracker. ","date":"2020-11-18","objectID":"/hugo-loveit-theme/about/:5:0","tags":["about","LoveIt"],"title":"About site","uri":"/hugo-loveit-theme/about/"},{"categories":[],"content":"License LoveIt is licensed under the MIT license. Check the LICENSE file for details. Thanks to the authors of following resources included in the theme: normalize.css Font Awesome Simple Icons Animate.css Smooth Scroll autocomplete.js Lunr.js algoliasearch lazysizes object-fit-images Twemoji lightgallery.js clipboard.js Sharer.js TypeIt KaTeX mermaid ECharts Mapbox GL JS APlayer MetingJS Gitalk Valine cookieconsent ","date":"2020-11-18","objectID":"/hugo-loveit-theme/about/:6:0","tags":["about","LoveIt"],"title":"About site","uri":"/hugo-loveit-theme/about/"},{"categories":[],"content":"Author Dillon ","date":"2020-11-18","objectID":"/hugo-loveit-theme/about/:7:0","tags":["about","LoveIt"],"title":"About site","uri":"/hugo-loveit-theme/about/"},{"categories":[],"content":"Sponsor If you enjoy the theme, please consider buying me a coffee ☕️. PayPal Alipay Wechat Thanks! ❤️ ","date":"2020-11-18","objectID":"/hugo-loveit-theme/about/:8:0","tags":["about","LoveIt"],"title":"About site","uri":"/hugo-loveit-theme/about/"},{"categories":["test"],"content":"desc test image assets","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/test-image-assets/","tags":["test","hugo"],"title":"test image assets","uri":"/hugo-loveit-theme/posts/2020/11/18/test-image-assets/"},{"categories":["test"],"content":"内容啊 ","date":"2020-11-18","objectID":"/hugo-loveit-theme/posts/2020/11/18/test-image-assets/:0:0","tags":["test","hugo"],"title":"test image assets","uri":"/hugo-loveit-theme/posts/2020/11/18/test-image-assets/"}]